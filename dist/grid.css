:root {
  --grid-min: 20rem;
  --grid-gap: 1rem;
}

@supports (display: grid) {
  .grid:not(.flex) {
    /* autoprefixer grid: off */
    display: grid;
    grid-gap: var(--grid-gap);
    grid-template-columns: repeat(auto-fit, minmax(var(--grid-min), 1fr));
  }
}
@media only screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  .grid {
    display: flex;
    flex-wrap: wrap;
    margin: calc(var(--grid-gap) / -2 ) !important;
  }
  .grid > * {
    flex-shrink: 1;
    flex-grow: 1;
    flex-basis: var(--grid-min);
    margin: calc(var(--grid-gap) / 2 ) !important;
  }
  .grid.albatross > * {
    flex-basis: calc((var(--grid-min) - 100%) * 999);
  }
}

.flexgrid, .grid.flex {
  display: flex;
  flex-wrap: wrap;
  margin: calc(var(--grid-gap) / -2 ) !important;
}
.flexgrid > *, .grid.flex > * {
  flex-shrink: 1;
  flex-grow: 1;
  flex-basis: var(--grid-min);
  margin: calc(var(--grid-gap) / 2 ) !important;
}
.flexgrid.albatross > *, .grid.flex.albatross > * {
  flex-basis: calc((var(--grid-min) - 100%) * 999);
}

.flex--auto {
  flex: 0 1 auto;
}

/*# sourceMappingURL=grid.css.map */
